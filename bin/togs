#!/usr/bin/env node

'use strict';

var fs = require('fs'),
    ini = require('ini'),
    log = require('winston'),
    togs = require('../lib/togs'),
    parseArgs = require('minimist');


// parse command line
var argv = parseArgs(process.argv, { "default": {"f": "./conf/togs.conf"} });

// usage info
if (argv.h || argv.help) {
    console.log( [
       'Usage:', 
       '     $ togs [options]',
       '',
       'Options:',
       '    -f                   Path to config file [conf/togs.conf]',
       ''].join('\n'));
    process.exit();
};

// add timestamps to log messages
log.remove(log.transports.Console);
log.add(log.transports.Console, { "timestamp": true });

// banner
log.info('Starting togs.');

// parse configuration file

try {

   var config = ini.parse(fs.readFileSync(argv['f'],'utf-8'));

} catch (e) {

   log.error('Failed to parse config file: %s.', e);
   process.exit(-1);
}

if (!config.interface) config.interface = {};
if (!config.control) config.control = {};
if (!config.control.port) { config.control.port = 8100; }


// create server, listen
var server = togs.createServer(config.interface || {});
server.listen(config.control.port);

// log exit
process.on('SIGINT', function () {
  log.info("Received SIGINT, exiting.");
  process.exit();
});

process.on('SIGTERM', function () {
  log.info("Received SIGTERM, exiting.");
  process.exit();
});




